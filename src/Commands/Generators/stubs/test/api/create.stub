<?php

namespace {{ namespace }};

use App\Ship\Abstracts\Tests\TestCase;
use Illuminate\Testing\Fluent\AssertableJson;
use {{ modelNamespace }}\{{ model }};

/**
 * @group {{ moduleNameLower }}
 * @group api
 */
class {{ class }} extends TestCase
{
    /**
     * Roles and permissions, to be attached on the user by default
     */
    protected array $access = [
        'permissions' => 'create-{{ modelPermissionEntity }}',
        'roles'       => '',
    ];

    protected function getTestData(): array
    {
        return [
            // TODO: add fields here
        ];
    }

    public function testCreate{{ model }}(): void
    {
        $this->getTestingUser();
        $data = $this->getTestData();

        $this->postJson(route('{{ routeName }}'), $data)
            ->assertCreated()
            ->assertJson(fn (AssertableJson $json) =>
                $json->has('data', fn (AssertableJson $json) =>
                    $json->has('id')
                        ->whereAll($data)
                        ->etc()
                    )
            );

        $this->assertExistsModelWithAttributes({{ model }}::class, $data);
    }

    public function testCreate{{ model }}WithoutAccess(): void
    {
        $this->getTestingUserWithoutAccess();
        $data = $this->getTestData();

        $this->postJson(route('{{ routeName }}'), $data)
            ->assertForbidden();
    }
}
