<?php

namespace {{ namespace }};

use {{ modelNamespace }}\{{ model }};
use App\Ship\Abstracts\Tests\TestCase;

/**
 * @group {{ modulePackageName }}
 * @group web
 */
class {{ class }} extends TestCase
{
    /**
     * Roles and permissions, to be attached on the user by default
     */
    protected array $access = [
        'permissions' => 'delete-{{ modelPermissionEntity }}',
        'roles'       => '',
    ];

    public function test_delete_{{ modelSnake }}(): void
    {
        $this->getTestingUser();

        ${{ modelEntity }} = {{ model }}::factory()->create();

        $this->delete(route('{{ routeName }}', ['{{ modelEntity }}' => ${{ modelEntity }}->getKey()]))
            ->assertNoContent();

        $this->assertNull({{ model }}::find(${{ modelEntity }}->getKey()));
    }

    public function test_delete_{{ modelSnake }}_without_access(): void
    {
        $this->getTestingUserWithoutAccess();

        ${{ modelEntity }} = {{ model }}::factory()->create();

        $this->delete(route('{{ routeName }}', ['{{ modelEntity }}' => ${{ modelEntity }}->getKey()]))
            ->assertForbidden();
    }

    public function test_delete_not_existing_{{ modelSnake }}(): void
    {
        $this->getTestingUser();

        $this->delete(route('{{ routeName }}', ['{{ modelEntity }}' => 7777]))
            ->assertNotFound();
    }
}
