<?php

namespace {{ namespace }};

use App\Ship\Abstracts\Tests\TestCase;
use {{ modelNamespace }}\{{ model }};

/**
 * @group {{ moduleKey }}
 * @group web
 */
class {{ class }} extends TestCase
{
    /**
     * Roles and permissions, to be attached on the user by default
     */
    protected array $access = [
        'permissions' => 'create-{{ modelPermissionEntity }}',
        'roles'       => '',
    ];

    protected function getTestData(array $mergeData = []): array
    {
        return array_merge([
            // TODO: add fields here
        ], $mergeData);
    }

    public function test_create_{{ modelSnake }}(): void
    {
        $this->getTestingUser();

        $data = $this->getTestData();

        $this->post(route('{{ routeName }}'), $data)
            ->assertCreated();

        $this->assertExistsModelWhereColumns({{ model }}::class, $data);
    }

    public function test_create_{{ modelSnake }}_without_access(): void
    {
        $this->getTestingUserWithoutAccess();

        $data = $this->getTestData();

        $this->post(route('{{ routeName }}'), $data)
            ->assertForbidden();
    }
}
