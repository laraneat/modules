<?php

namespace {{ namespace }};

use App\Ship\Abstracts\Policies\Policy;
use Illuminate\Auth\Access\HandlesAuthorization;
use {{ modelNamespace }}\{{ model }};
use {{ userNamespace }}\{{ user }};

class {{ class }} extends Policy
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any models.
     */
    public function viewAny({{ user }} $user): bool
    {
        return $user->can('view-{{ modelPermissionEntity }}');
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view({{ user }} $user, {{ model }} ${{ modelEntity }}): bool
    {
        return $user->can('view-{{ modelPermissionEntity }}');
    }

    /**
     * Determine whether the user can create models.
     */
    public function create({{ user }} $user): bool
    {
        return $user->can('create-{{ modelPermissionEntity }}');
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update({{ user }} $user, {{ model }} ${{ modelEntity }}): bool
    {
        return $user->can('update-{{ modelPermissionEntity }}');
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete({{ user }} $user, {{ model }} ${{ modelEntity }}): bool
    {
        return $user->can('delete-{{ modelPermissionEntity }}');
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore({{ user }} $user, {{ model }} ${{ modelEntity }}): bool
    {
        return $user->can('delete-{{ modelPermissionEntity }}');
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete({{ user }} $user, {{ model }} ${{ modelEntity }}): bool
    {
        return $user->can('force-delete-{{ modelPermissionEntity }}');
    }
}
