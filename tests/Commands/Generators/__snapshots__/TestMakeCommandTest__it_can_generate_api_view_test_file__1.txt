<?php

namespace App\Modules\Article\UI\API\Tests\Baz\Bat;

use App\Modules\Article\Models\Some\Nested\SomeTestModel;
use App\Ship\Abstracts\Tests\TestCase;
use Illuminate\Testing\Fluent\AssertableJson;

/**
 * @group article
 * @group api
 */
class MyAwesomeApiViewTest extends TestCase
{
    /**
     * Roles and permissions, to be attached on the user by default
     */
    protected array $access = [
        'permissions' => 'view-some-test-model',
        'roles'       => '',
    ];

    public function testViewSomeTestModel(): void
    {
        $this->getTestingUser();

        $someTestModel = SomeTestModel::factory()->create();
        $expectedData = [
            'id' => $someTestModel->getKey(),
            // TODO: add fields here
        ];

        $this->getJson(route('some.api.url', ['someTestModel' => $someTestModel->getKey()]))
            ->assertOk()
            ->assertJson(fn (AssertableJson $json) =>
                $json->has('data', fn (AssertableJson $json) =>
                    $json->whereAll($expectedData)
                        ->etc()
                )
            );
    }

    public function testViewSomeTestModelWithoutAccess(): void
    {
        $this->getTestingUserWithoutAccess();

        $someTestModel = SomeTestModel::factory()->create();

        $this->getJson(route('some.api.url', ['someTestModel' => $someTestModel->getKey()]))
            ->assertForbidden();
    }

    public function testViewNotExistingSomeTestModel(): void
    {
        $this->getTestingUser();

        $this->getJson(route('some.api.url', ['someTestModel' => 7777]))
            ->assertNotFound();
    }
}
