<?php

namespace App\Modules\Article\UI\WEB\Tests\Baz\Bat;

use App\Modules\Article\Models\Some\Nested\SomeTestModel;
use App\Ship\Abstracts\Tests\TestCase;

/**
 * @group article
 * @group web
 */
class MyAwesomeWebUpdateTest extends TestCase
{
    /**
     * Roles and permissions, to be attached on the user by default
     */
    protected array $access = [
        'permissions' => 'update-some-test-model',
        'roles'       => '',
    ];

    public function testUpdateSomeTestModel(): void
    {
        $this->getTestingUser();

        $someTestModel = SomeTestModel::factory()->create();

        $data = [
            // TODO: add fields here
        ];
        $expectedData = array_merge($data, [
            'id' => $someTestModel->getKey(),
        ]);

        $this->patch(route('some.web.url', ['someTestModel' => $someTestModel->getKey()]), $data)
           ->assertOk();

        $this->assertExistsModelWithAttributes(SomeTestModel::class, $expectedData);
    }

    public function testUpdateSomeTestModelWithoutAccess(): void
    {
        $this->getTestingUserWithoutAccess();

        $someTestModel = SomeTestModel::factory()->create();

        $data = [
            // TODO: add fields here
        ];

        $this->patch(route('some.web.url', ['someTestModel' => $someTestModel->getKey()]), $data)
            ->assertForbidden();
    }

    public function testUpdateNonExistingSomeTestModel(): void
    {
        $this->getTestingUser();

        $data = [
            // TODO: add fields here
        ];

        $this->patch(route('some.web.url', ['someTestModel' => 7777]), $data)
            ->assertNotFound();
    }
}
